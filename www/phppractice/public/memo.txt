Mysqlの学習用memo
dockerにて学習しているので
docker exec -it ~~~ bash 
(~~~はNAME)
これでmysqlのコンテナに接続して、
mysql -u [User] -p
これでパスワードを正しく打てばmysqlに接続できる
mysql>
このような表示になっていればOK
Ctrl + l で画面クリアができる
テーブルの行のことをrecord/rowという
列のことをField/Columnという
create database hoge;
これでhogeというdbが作成できる
drop database hoge;
これでhogeというdbを削除できる
use hoge;
これでhogeというdbを選択状態になる
作業用ユーザーを作成する
create user dbuser@localhost identified by 'pass';
-u dbuser -p
pass
というユーザーが作成できる

grant all on mydb01.* to dbuser@localhost;
dbuserに対して、mydb01の全テーブルの全権限を付与するという実行文

rootの接続からexitで抜けて
mysql -u dbuser -p mydb01
mydb01を末尾に指定することでuse mydb01の手間を省く
show databases;
を実行するとアクセス権限のあるmydb01のみ表示される

【Userとdb削除】
削除はroot権限でしかできないのでrootで入り直す
drop database mydb01;
drop user dbuser@localhost;
これで削除ができる

外部ファイルの読み込み
create_myapp.sqlを作成する

drop database if exists myapp;
create database myapp;
grant all on myapp.* to myapp_user@localhost identified by 'password';
create userをしなくても権限と一緒にUserを作成できる
接続するときに
mysql -u root < create_myapp.sql
のように流し込んであげる
mysql -u myapp_user -p myapp
で接続できる
create table users (
  id int unsigned,
  name varchar(20),
  score float
);
これを流し込んだらtableが作成され
show tables;
これでテーブル一覧を確認できる
テーブル構造を見たいときは
desc users;
description usersってことらしい
drop table users;
で削除できる

Mysqlが扱えるデータ型
number:
- int (整数)
- float (浮動小数点数）
- double (floatより精度の高いやつ)
- int unsigned (unsignedをつけるとマイナスも使用できる)

string:
- char (固定長)
− varchar(255) (可変長)
− text         (可変長,文字数がどれぐらいになるかわからない時はこれを使う)

data/time:
- data (日付)
- time (時間)
- datatime '2019-04-20 18:00:00'

true/false
- boolean -> tinyint(1)  (booleanは一桁の整数の別名)
内部的には
  true  -> 1
  false -> 0

insert into users (id, name, score) values (1, 'taguchi', 5.8);
insert into users (id, name, score) values (2, 'fkoji', 2.0);
こう書くのと
insert into users (id, name, score) values 
  (1, 'taguchi', 5.8),
  (2, 'fkoji', 2.0);
これは一緒である。

primary key auto_increment
は識別できる一意な値であることとauto_incrementで自動で値が増加して行くことを意味する
なのでIDとかにこれがあればinsertの時に指定しなくても作成され増えていく
not null 制約は
score float not null
と書く
score float default 0.0
これでdefaultを指定できる.

